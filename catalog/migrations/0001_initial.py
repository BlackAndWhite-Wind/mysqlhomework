# Generated by Django 4.1.3 on 2022-12-04 10:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32, verbose_name='用户名')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
            ],
            options={
                'verbose_name': '管理员',
                'verbose_name_plural': '管理员',
            },
        ),
        migrations.CreateModel(
            name='CUSTOMER',
            fields=[
                ('C_CUSTKEY', models.IntegerField(help_text='顾客编号，主键', primary_key=True, serialize=False, verbose_name='顾客编号')),
                ('C_NAME', models.CharField(help_text='顾客名称', max_length=25, verbose_name='顾客名称')),
                ('C_ADDRESS', models.CharField(help_text='顾客地址', max_length=40, verbose_name='顾客地址')),
                ('C_PHONE', models.CharField(help_text='联系电话', max_length=15, verbose_name='联系电话')),
                ('C_ACCTBAL', models.FloatField(help_text='可用余额', verbose_name='可用余额')),
                ('C_MKTSEGMENT', models.CharField(help_text='市场', max_length=10, verbose_name='市场')),
                ('C_COMMENT', models.TextField(help_text='备注', max_length=117, verbose_name='备注')),
            ],
            options={
                'verbose_name': '顾客',
                'verbose_name_plural': '顾客',
            },
        ),
        migrations.CreateModel(
            name='NATION',
            fields=[
                ('N_NATIONKEY', models.IntegerField(help_text='国家代码，主键', primary_key=True, serialize=False, verbose_name='国家代码')),
                ('N_NAME', models.CharField(help_text='国家名称', max_length=25, verbose_name='国家名称')),
                ('N_COMMENT', models.TextField(help_text='备注', max_length=199, verbose_name='备注')),
            ],
            options={
                'verbose_name': '国家',
                'verbose_name_plural': '国家',
            },
        ),
        migrations.CreateModel(
            name='PART',
            fields=[
                ('P_PARTKEY', models.IntegerField(help_text='零件编号，主键', primary_key=True, serialize=False, verbose_name='零件编号')),
                ('P_NAME', models.CharField(help_text='零件名称', max_length=55, verbose_name='零件名称')),
                ('P_MFGR', models.CharField(help_text='生产商', max_length=25, verbose_name='生产商')),
                ('P_BRAND', models.CharField(help_text='品牌', max_length=10, verbose_name='品牌')),
                ('P_TYPE', models.CharField(help_text='型号', max_length=10, verbose_name='型号')),
                ('P_SIZE', models.IntegerField(help_text='尺寸', verbose_name='尺寸')),
                ('P_CONTAINER', models.CharField(help_text='包装容器', max_length=10, verbose_name='包装容器')),
                ('P_RETAILPRICE', models.FloatField(help_text='零售价', verbose_name='零售价')),
                ('P_COMMENT', models.TextField(help_text='备注', max_length=23, verbose_name='备注')),
            ],
            options={
                'verbose_name': '零件',
                'verbose_name_plural': '零件',
            },
        ),
        migrations.CreateModel(
            name='REGION',
            fields=[
                ('R_REGIONKEY', models.IntegerField(help_text='地区代码，主键', primary_key=True, serialize=False, verbose_name='地区代码')),
                ('R_NAME', models.CharField(help_text='地区名称', max_length=25, verbose_name='地区名称')),
                ('R_COMMENT', models.TextField(help_text='评价', max_length=152, verbose_name='评价')),
                ('PS_SUPPLYCOST', models.FloatField(help_text='供应价格', verbose_name='供应价格')),
                ('PS_COMMENT', models.TextField(help_text='备注', max_length=199, verbose_name='备注')),
            ],
            options={
                'verbose_name': '地区',
                'verbose_name_plural': '地区',
            },
        ),
        migrations.CreateModel(
            name='SUPPLIER',
            fields=[
                ('S_SUPPKEY', models.IntegerField(help_text='供应商编号，主键', primary_key=True, serialize=False, verbose_name='供应商编号')),
                ('S_NAME', models.CharField(help_text='供应商名称', max_length=55, verbose_name='供应商名称')),
                ('S_ADDRESS', models.CharField(help_text='供应商地址', max_length=40, verbose_name='供应商地址')),
                ('S_PHONE', models.CharField(help_text='电话', max_length=15, verbose_name='电话')),
                ('S_ACCTBAL', models.FloatField(help_text='余额', verbose_name='余额')),
                ('S_COMMENT', models.TextField(help_text='备注', max_length=101, verbose_name='备注')),
                ('S_NATIONKEY', models.ForeignKey(help_text='所属国家,外键N_NATIONKEY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SN_NATIONKEY', to='catalog.nation', verbose_name='所属国家')),
            ],
            options={
                'verbose_name': '供应商',
                'verbose_name_plural': '供应商',
            },
        ),
        migrations.CreateModel(
            name='PARTSUPP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PS_AVAILQTY', models.IntegerField(help_text='供应数量', verbose_name='供应数量')),
                ('PS_SUPPLYCOST', models.FloatField(help_text='供应价格', verbose_name='供应价格')),
                ('PS_COMMENT', models.TextField(help_text='备注', max_length=199, verbose_name='备注')),
                ('PS_PARTKEY', models.OneToOneField(help_text='零件名称,外键P_PARTKEY。与PS_SUPPKEY联合构成主键', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PSP_PARTKEY', to='catalog.part', verbose_name='零件编号')),
                ('PS_SUPPKEY', models.OneToOneField(help_text='供应商名称,外键S_SUPPKEY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PSS_SUPPKEY', to='catalog.supplier', verbose_name='供应商编号')),
            ],
            options={
                'verbose_name': '零件供应',
                'verbose_name_plural': '零件供应',
                'unique_together': {('PS_PARTKEY', 'PS_SUPPKEY')},
            },
        ),
        migrations.CreateModel(
            name='ORDERS',
            fields=[
                ('O_ORDERKEY', models.IntegerField(help_text='订单编号，主键', primary_key=True, serialize=False, verbose_name='订单编号')),
                ('O_ORDERSTATUS', models.CharField(choices=[(1, '待支付'), (2, '已支付')], default=1, help_text='订单状态', max_length=1, verbose_name='订单状态')),
                ('O_TOTALPRICE', models.FloatField(help_text='订单金额', unique=True, verbose_name='订单金额')),
                ('O_ORDERDATE', models.DateField(help_text='订单日期', verbose_name='订单日期')),
                ('O_ORDERPRIORITY', models.CharField(help_text='优先级', max_length=15, verbose_name='优先级')),
                ('O_CLERK', models.CharField(help_text='制单员', max_length=15, verbose_name='制单员')),
                ('O_SHIPPRIORITY', models.IntegerField(help_text='运输优先级', verbose_name='运输优先级')),
                ('O_COMMENT', models.TextField(help_text='备注', max_length=79, verbose_name='备注')),
                ('O_CUSTKEY', models.ForeignKey(help_text='顾客名称,外键C_CUSTKEY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='OC_CUSTKEY', to='catalog.customer', verbose_name='顾客名称')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
            },
        ),
        migrations.AddField(
            model_name='nation',
            name='N_REGIONKEY',
            field=models.ForeignKey(help_text='所属地区,外键R_REGIONKEY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='NR_REGIONKEY', to='catalog.region', verbose_name='所属地区'),
        ),
        migrations.AddField(
            model_name='customer',
            name='C_NATIONKEY',
            field=models.ForeignKey(help_text='所属国家,外键N_NATIONKEY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='CN_NATIONKEY', to='catalog.nation', verbose_name='所属国家'),
        ),
        migrations.CreateModel(
            name='LINEITEM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('L_LINENUMBER', models.IntegerField(help_text='明细编号 PK', verbose_name='明细编号')),
                ('L_QUANTITY', models.FloatField(help_text='数量', verbose_name='数量')),
                ('L_EXTENDEDPRICE', models.FloatField(help_text='总金额', verbose_name='总金额')),
                ('L_DISCOUNT', models.FloatField(help_text='折扣', verbose_name='折扣')),
                ('L_TAX', models.FloatField(help_text='税', verbose_name='税')),
                ('L_RETURNFLAG', models.CharField(choices=[(1, '正常交易'), (2, '退货')], default=1, help_text='是否退货', max_length=1, verbose_name='是否退货')),
                ('L_LINESTATUS', models.CharField(choices=[(1, '待支付'), (2, '已支付')], default=1, help_text='明细状态', max_length=1, verbose_name='明细状态')),
                ('L_SHIPDATE', models.DateField(help_text='运输日期,L_SHIPDATE <= L_RECEIPTDAT', verbose_name='运输日期')),
                ('L_COMMITDATE', models.DateField(help_text='交付日期', verbose_name='交付日期')),
                ('L_RECEIPTDATE', models.DateField(help_text='收货日期', verbose_name='收货日期')),
                ('L_SHIPINSTRUCT', models.CharField(help_text='运输单位', max_length=25, verbose_name='运输单位')),
                ('L_SHIPMODE', models.CharField(help_text='运输方式', max_length=10, verbose_name='运输方式')),
                ('L_COMMENT', models.TextField(help_text='备注1', max_length=44, verbose_name='备注')),
                ('L_ORDERKEY', models.OneToOneField(help_text='订单号,外键O_ORDERKEY。与L_LINENUMBER联合构成主键', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='LO_ORDERKEY', to='catalog.orders', verbose_name='订单号')),
                ('L_PARTKEY', models.ForeignKey(help_text='零件编号，外键PS_PARTKEY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='LPS_PARTKEY', to='catalog.partsupp', to_field='PS_PARTKEY', verbose_name='零件编号')),
                ('L_SUPPKEY', models.ForeignKey(help_text='供应商编号，外键PS_SUPPKEY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='LPS_SUPPKEY', to='catalog.partsupp', to_field='PS_SUPPKEY', verbose_name='供应商编号')),
            ],
            options={
                'verbose_name': '订单明细',
                'verbose_name_plural': '订单明细',
                'unique_together': {('L_ORDERKEY', 'L_LINENUMBER')},
            },
        ),
    ]
